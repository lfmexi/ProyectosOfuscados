/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2_bases1;

/**
 *
 * @author Luis Fernando
 */
import java.awt.Component;
import java.sql.*;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeCellRenderer;
public class Ventana_Nueva_Conexion extends javax.swing.JFrame {

    /**
     * Creates new form Ventana_Nueva_Conexion
     */
    private VentanaInicial padre;
    
    public Ventana_Nueva_Conexion() {
        initComponents();
    }

    public Ventana_Nueva_Conexion(VentanaInicial padre){
        this();
        this.padre=padre;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textoHost = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textoUser = new javax.swing.JTextField();
        textPassword = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Conexi칩n Nueva");
        setResizable(false);

        jLabel1.setText("Host:");

        jLabel2.setText("Usuario:");

        jLabel3.setText("Contrase침a:");

        jButton1.setText("Conectar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Porbar Conexi칩n");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textPassword))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoUser, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textoHost, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(38, 38, 38))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(textoHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textoUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(textPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton1))
                        .addGap(23, 23, 23))))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-457)/2, (screenSize.height-187)/2, 457, 187);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String hostname=this.textoHost.getText();
        String user=this.textoUser.getText();
        String passwd=String.copyValueOf(this.textPassword.getPassword());
        
        if(hostname!=null && user!=null){
            if(!hostname.equals("")&&!user.equals("")){
                this.padre.host=hostname;
                this.padre.user=user;
                if(passwd!=null){this.padre.pass=passwd; }
            
                String cs="jdbc:postgresql://"+hostname+"/postgres?user="+user
                        +"&password="+passwd;
                try{
                    Class.forName("org.postgresql.Driver");
                    Connection conn=DriverManager.getConnection(cs);
                    Statement st=conn.createStatement();
                    String sql="select datname from pg_database where datname not like \'%template%\' and datname!=\'postgres\'";
                    ResultSet res=st.executeQuery(sql);
                    DefaultMutableTreeNode usr=new DefaultMutableTreeNode(new ElementoArbol(user,"conn","/proyecto2_bases1/conn.png"));
                    while(res.next()){
                        DefaultMutableTreeNode nodo=new DefaultMutableTreeNode(new ElementoArbol(res.getString("datname"),"db","/proyecto2_bases1/db.png"));
                        usr.add(nodo);
                    }
                    DefaultTreeModel dtm=new DefaultTreeModel(usr);
                    this.padre.arbolBases.setModel(dtm);
                    this.padre.arbolBases.setCellRenderer(new elemntoCellReader());
                    this.padre.arbolBases.setVisible(true);
                    conn.close();
                    this.dispose();
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e.getMessage()+": La conexi칩n ha fallado","Error",JOptionPane.ERROR_MESSAGE);
                    this.padre.host="";
                    this.padre.user="";
                    this.padre.pass=""; 
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String hostname=this.textoHost.getText();
        String user=this.textoUser.getText();
        String passwd=String.copyValueOf(this.textPassword.getPassword());
        
        if(hostname!=null && user!=null){
            if(passwd==null){passwd=""; }
            if(!hostname.equals("")&&!user.equals("")){
                String cs="jdbc:postgresql://"+hostname+"/postgres?user="+user
                        +"&password="+passwd;
                try{
                    Class.forName("org.postgresql.Driver");
                    Connection conn=DriverManager.getConnection(cs);
                    JOptionPane.showMessageDialog(null, "Conexi칩n Correcta","Aviso",JOptionPane.INFORMATION_MESSAGE);
                    conn.close();
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e.getMessage()+": La conexi칩n ha fallado","Error",JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(null, "Los campos de Hostname y usuario son obligatorios","Error",JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Los campos de Hostname y usuario son obligatorios","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField textPassword;
    private javax.swing.JTextField textoHost;
    private javax.swing.JTextField textoUser;
    // End of variables declaration//GEN-END:variables
}

class elemntoCellReader implements TreeCellRenderer{

    private JLabel label;
    
    public elemntoCellReader(){
        label=new JLabel();
    }
    @Override
    public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {
        Object o=((DefaultMutableTreeNode)value).getUserObject();
        if(o instanceof ElementoArbol){
            ElementoArbol elemento=(ElementoArbol)o;
            label.setIcon(new ImageIcon(this.getClass().getResource(elemento.getIcono())));
            label.setText(elemento.getNombre());
        }else{
            label.setIcon(null);
            label.setText(""+value);
        }
        return label;
    }

}